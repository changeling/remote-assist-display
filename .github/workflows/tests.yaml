name: Tests

on:
  push:
    paths:
      - 'application/**'
      - 'custom_components/**'
      - '.github/workflows/**'
  pull_request:
    branches: [main]

jobs:
  test-application:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./application

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv

      - name: Install GTK dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config cmake libcairo2-dev python3-gi python3-gi-cairo gir1.2-gtk-3.0 gir1.2-webkit2-4.1 libgirepository1.0-dev

      - name: Install Python dependencies
        run: |
          pipenv install --dev

      - name: Run tests
        run: |
          pipenv run pytest tests/ -v --cov-branch --cov-report=xml --junitxml=junit.xml -o junit_family=legacy
      
      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage reports to codecov
        uses: codecov/codecov-action@v5
        with:
          flags: application
          token: ${{ secrets.CODECOV_TOKEN }}

  test-custom-component:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./custom_components

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv

      - name: Install Python dependencies
        run: |
          pipenv install

      - name: Run tests
        env:
          PYTHONPATH: ${{ github.workspace }}
        run: |
          pipenv run pytest tests/ -v --cov-branch --cov-report=xml --junitxml=junit.xml -o junit_family=legacy

      - name: Upload test results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage reports to codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: integration

