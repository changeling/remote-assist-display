name: Build

on:
  workflow_run:
    workflows: ["Tests"]
    types:
      - completed

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      should_build: ${{ steps.check.outputs.changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get changed files
        id: check
        run: |
          # Get the commit before the push that triggered the workflow
          BASE_SHA=$(git rev-parse ${{ github.event.workflow_run.head_sha }}^)
          
          # Get the list of changed files
          CHANGED_FILES=$(git diff --name-only $BASE_SHA ${{ github.event.workflow_run.head_sha }})
          
          echo "Changed files:"
          echo "$CHANGED_FILES"
          
          # Check for changes in application directory or workflow file
          if echo "$CHANGED_FILES" | grep -q "^application/" || echo "$CHANGED_FILES" | grep -q "^.github/workflows/build.yaml$"; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi
          
  build-alpine-arm64-application:
    needs: check-changes
    if: ${{ github.event.workflow_run.conclusion == 'success' && needs.check-changes.outputs.should_build == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./application

    steps:
    - uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Pull builder image
      run: |
        docker buildx create --use
        docker pull --platform linux/arm64 ghcr.io/${{ github.repository }}/rad-builder-alpine-arm64:latest

    - name: Build application
      run: |
        docker run --rm --platform linux/arm64 \
          -v ${PWD}:/usr/src/app \
          ghcr.io/${{ github.repository }}/rad-builder-alpine-arm64:latest

    - name: Fix permissions
      run: |
        sudo chown -R $USER:$USER dist/
        sudo chmod -R 755 dist/

    - name: Get short SHA
      id: sha
      run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Rename binary
      run: |
        cd dist
        mv remote-assist-display-app-alpine-arm64 remote-assist-display-${{ steps.sha.outputs.sha }}-alpine-arm64

    - name: Upload binary
      uses: actions/upload-artifact@v4
      with:
        name: remote-assist-display-${{ steps.sha.outputs.sha }}-alpine-arm64
        path: application/dist/remote-assist-display-${{ steps.sha.outputs.sha }}-alpine-arm64

  build-android:
    needs: check-changes
    if: ${{ github.event.workflow_run.conclusion == 'success' && needs.check-changes.outputs.should_build == 'true' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./application
    steps:
    - uses: actions/checkout@v4

    - name: Pull android builder image
      run: |
        docker pull ghcr.io/${{ github.repository }}/rad-builder-android:latest

    - name: Fix repository root permissions
      run: |
        sudo chown -R $USER:$USER ${{ github.workspace }}

    - name: debugging
      run: |
        pwd
        ls -la
        ls -la build

    - name: Set up debug keystore
      run: |
        mkdir -p ${{ github.workspace }}/.buildozer/android/platform/
        echo "${{ secrets.DEBUG_KEYSTORE }}" | base64 -d > ${{ github.workspace }}/.buildozer/android/platform/debug.keystore
        chmod 600 ${{ github.workspace }}/.buildozer/android/platform/debug.keystore

    - name: Build APK
      run: |
        docker run --rm \
        -v ${{ github.workspace }}/application:/home/user/hostcwd \
        -v ${{ github.workspace }}/.buildozer:/home/user/.buildozer \
        ghcr.io/${{ github.repository }}/rad-builder-android:latest \
        android debug

    - name: Fix permissions
      run: |
        sudo chown -R $USER:$USER build/bin/
        sudo chmod -R 755 build/bin/

    - name: Get short SHA
      id: sha
      run: echo "sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

    - name: Rename APK
      run: |
        cd build/bin
        mv *.apk remote-assist-display-${{ steps.sha.outputs.sha }}.apk

    - name: Upload APK artifact
      uses: actions/upload-artifact@v4
      with:
          name: remote-assist-display-${{ steps.sha.outputs.sha }}.apk
          path: application/build/bin/remote-assist-display-${{ steps.sha.outputs.sha }}.apk
